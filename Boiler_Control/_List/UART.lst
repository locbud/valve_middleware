C51 COMPILER V9.59.0.0   UART                                                              09/25/2019 14:50:55 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\_Obj\UART.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Libraries\UART.C LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Source
                    -;..\Libraries) DEFINE(MB_MT=0,Uart1=1,Uart2=0) DEBUG PRINT(..\_List\UART.lst) OBJECT(.\_Obj\UART.obj)

line level    source

   1          //--------------------------------------------------------------------------
   2          //
   3          //--------------------------------------------------------------------------
   4          #include <string.h>
   5          #include "REG_MG82FG5Bxx.h"
   6          #include "Uart.h"
   7          #include "Define.h"
   8          #include "Time2.h"
   9          //--------------------------------------------------------------------------
  10          #if(Uart1)
  11          //---
  12          bit     Tx1_FG = 0;
  13          bit     Rx1_FG = 0;
  14          bit     Rx1_CP = 0;
  15          //
  16          idata unsigned char Tx1_Interval = 0;
  17          idata unsigned char Tx1_tCNT = 0;
  18          idata unsigned char Tx1_Time = 0;
  19          idata unsigned char Tx1_CNT = 0;
  20          idata unsigned char Tx1_Len = 0;
  21          xdata unsigned char Tx1_Buf[Tx1_Size] = {0};
  22          idata unsigned int  Rx1_Time = 0;
  23          idata unsigned char Rx1_tCNT = 0;
  24          idata unsigned char Rx1_CNT = 0;
  25          idata unsigned char Rx1_Len = 0;
  26          xdata unsigned char Rx1_Buf[Rx1_Size] = {0};
  27          xdata unsigned char Rx1_tBuf[Rx1_Size] = {0};
  28          //---
  29          void Initial_UART0(unsigned char BR)
  30          { 
  31   1              TMOD |= 0x20;                                   //Set Timer1 in Mode2 ( 8 bit ) auto reload mode
  32   1              AUXR2 &= !0x08;                         //T1X12 =0, clock source = SYSCLK 
  33   1          TL1   = BR;
  34   1          TH1   = BR;
  35   1          S0CON = 0x50;                                       //SM10=1,SM00=0,
  36   1                                                                                              //REN0=1 Enable reception
  37   1              PCON0|= 0x80;                                   //SMOD1=1;
  38   1          //S0CFG|= 0x40;                             //SMOD2=1; 
  39   1              if(BR <= BR_1200)          Tx1_Interval = 12;
  40   1          else if(BR <= BR_4800)   Tx1_Interval = 6;
  41   1          else if(BR <= BR_9600)   Tx1_Interval = 3;
  42   1              else if(BR <= BR_14400) Tx1_Interval = 2;
  43   1          else Tx1_Interval = 1;
  44   1          TR1   = 1;
  45   1          ES0=1;
  46   1      }       
  47          //---
  48          void UART0_ISR (void) interrupt 4
  49          {
  50   1              idata unsigned char c = 0;
  51   1              idata unsigned char  bkSFRPI = 0;
  52   1              //---
  53   1          if(RI0){    
  54   2              RI0 = 0;
C51 COMPILER V9.59.0.0   UART                                                              09/25/2019 14:50:55 PAGE 2   

  55   2                      bkSFRPI = SFRPI;
  56   2                      SFRPI = 0x00;
  57   2              c = S0BUF;
  58   2                      SFRPI = bkSFRPI;
  59   2                      if(!Rx1_FG){
  60   3                              memset(Rx1_Buf, 0, Rx1_Size);
  61   3                              Rx1_CNT = 0;
  62   3                              Rx1_FG = 1;
  63   3                      }
  64   2              Rx1_Buf[Rx1_CNT++] = c;
  65   2              Rx1_Time = 0;
  66   2          }
  67   1          if(TI0) TI0=0;                                              //data transmitted 
  68   1      }
  69          //---
  70          void Send_Tx1(char *Da, char sLen)
  71          {
  72   1              Tx1_FG = 0;
  73   1      //      DIR0 = 1;
  74   1              Tx1_CNT = 0;
  75   1              Tx1_Len = sLen;
  76   1              memcpy(Tx1_Buf, Da, sLen);
  77   1              Tx1_FG = 1;
  78   1      }
  79          //---
  80          /*
  81          void U0Senddata(char c)
  82          {
  83                  TI0 = 0;
  84              S0BUF = c;
  85                  while(TI0);
  86          }
  87          */
  88          //---
  89          #endif
  90          //--------------------------------------------------------------------------
  91          #if(Uart2)
              //---
              bit     Tx2_FG = 0;
              bit     Rx2_FG = 0;
              bit     Rx2_CP = 0;
              //
              idata unsigned char Tx2_Interval = 0;
              idata unsigned char Tx2_tCNT = 0;
              idata unsigned char Tx2_Time = 0;
              idata unsigned char Tx2_CNT = 0;
              idata unsigned char Tx2_Len = 0;
              xdata unsigned char Tx2_Buf[Tx2_Size] = {0};
              idata unsigned int  Rx2_Time = 0;
              idata unsigned char Rx2_tCNT = 0;
              idata unsigned char Rx2_CNT = 0;
              idata unsigned char Rx2_Len = 0;
              xdata unsigned char Rx2_Buf[Rx2_Size] = {0};
              xdata unsigned char Rx2_tBuf[Rx2_Size] = {0};
              //---
              void Initial_UART1(unsigned char BR)
              {
                  SFRPI = 0x01;
                  S1CON = 0x50;                   //SM11=1, SM01=0,SM21=0,
                                                                                                      //at MODE1: 8-bit UART ,baud rate variable
                                                                                                      //REN1=1 Enable reception
                  S1BRT = BR;                                 //Baudrate
C51 COMPILER V9.59.0.0   UART                                                              09/25/2019 14:50:55 PAGE 3   

                      S1CFG &= ~S1TX12;                       //S1TX12=0
                      S1CFG |= S1MOD1;                        //S1MOD1=1
                      S1CFG |= S1TR;                                  //S1TR=1
                  SFRPI = 0x00;
                      if(BR <= BR_1200)          Tx2_Interval = 12;
                  else if(BR <= BR_4800)   Tx2_Interval = 3;
                  else if(BR <= BR_9600)   Tx2_Interval = 3;
                  else if(BR <= BR_14400) Tx2_Interval = 2;
                  else                              Tx2_Interval = 1;
                  EIE1 |= ES1;
                  P1M0 |= 0x08;                   //IO push-pull high
              }
              //---
              void UART1_ISR (void) interrupt 12
              {
                      idata unsigned char c = 0;
                  SFRPI = 0x01;
                  if(RI1){    
                      RI1=0;
                              bkSFRPI = SFRPI;
                              SFRPI = 0x01;
                      c = S1BUF;
                              SFRPI = bkSFRPI;
                              if(!Rx2_FG){
                                      memset(Rx2_Buf, 0, Rx2_Size);
                                      Rx2_CNT = 0;
                                      Rx2_FG  = 1;
                              }
                      Rx2_Buf[Rx2_CNT++] = c;
                      Rx2_Time = 0;
                  }   
                  if(TI1) TI1=0;                  //data transmitted 
                  SFRPI = 0x00;   
              } 
              
              //---
              void Send_Tx2(char *Da, char sLen)
              {
                      Tx2_FG = 0;
              //      DIR1 = 1;
                      Tx2_CNT = 0;
                      Tx2_Len = sLen;
                      memcpy(Tx2_Buf, Da, sLen);
                      Tx2_FG = 1;
              }
              //---
              /*
              void U1Senddata(char c)
              {
                  SFRPI = 0x01;
                      TI1 = 0;
                      S1BUF = c;
                      while(TI1);
                      SFRPI = 0x00;
              }
              */
              //---
              #endif
 175          //--------------------------------------------------------------------------
 176          // End of File


C51 COMPILER V9.59.0.0   UART                                                              09/25/2019 14:50:55 PAGE 4   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    260    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    114    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     10       2
   BIT SIZE         =      3    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
