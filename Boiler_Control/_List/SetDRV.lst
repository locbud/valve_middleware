C51 COMPILER V9.59.0.0   SETDRV                                                            09/25/2019 14:50:55 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE SETDRV
OBJECT MODULE PLACED IN .\_Obj\SetDRV.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Libraries\SetDRV.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Sour
                    -ce;..\Libraries) DEFINE(MB_MT=0,Uart1=1,Uart2=0) DEBUG PRINT(..\_List\SetDRV.lst) OBJECT(.\_Obj\SetDRV.obj)

line level    source

   1          //--------------------------------------------------------------------------
   2          //
   3          //--------------------------------------------------------------------------
   4          #include "REG_MG82FG5Bxx.h"
   5          #include "SetDRV.h"
   6          #include "Define.h"
   7          #include "IAP.h"
   8          //--------------------------------------------------------------------------
   9          idata char LED1_FG = 0;
  10          idata char LED2_FG = 0;
  11          //---
  12          unsigned char Mode_Val = 0;
  13          //---
  14          //unsigned char Flush_CNT = 0;
  15          //--------------------------------------------------------------------------
  16          /*
  17          const unsigned char RF_oST = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x57};  // Out 8Byte
  18          const unsigned char RF_oE1 = {0x3A, 0x6F, 0x6E, 0x20, 0x0D};    // ON  5Byte
  19          const unsigned char RF_oE2 = {0x3A, 0x4F, 0x46, 0x46, 0x0D};    // OFF 5Byte
  20          */
  21          //--------------------------------------------------------------------------
  22          /*
  23          void PageP_Write(unsigned int ad, unsigned char Dat)
  24          {
  25                  ISPCR   = 0x80;                 // ISPEN = 1
  26                  IFMT    = 0x04;                 // PAGE P SFR Write
  27                  IFADRH  = (unsigned char)(ad>>8);
  28                  IFADRL  = (unsigned char)ad;
  29                  IFD             = Dat;
  30                  SCMD    = 0x46;
  31                  SCMD    = 0xB9;
  32          }
  33          */
  34          //---
  35          void Ser_OSC(void)
  36          {
  37   1              CKCON0 |= (AFS|CKMIS0|ENCKM);   // CKCON0  11.0592MHz
  38   1              PageP_Write(0x0040, 0x54);              // 22.1184MHz
  39   1              PageP_Write(IAPLB_P, 0x3E);             // IAP Start Address 512Byte
  40   1      }
  41          /*
  42          //--------------------------------------------------------------------------
  43          void EnableWD(void)
  44          {
  45                  PCON1 |= WDTF; // Clear WDT flag (write ?1?)
  46                  // Enable WDT counter and set WDT period to 248ms
  47                  PageP_Write((unsigned int)WDTCR, WREN|ENW|CLW|PS2);
  48          }
  49          //--------------------------------------------------------------------------
  50          void LED_Flush(void)
  51          {
  52                  Flush_CNT++;
  53                  if(Flush_CNT >= 5){
  54                          Flush_CNT = 0;
C51 COMPILER V9.59.0.0   SETDRV                                                            09/25/2019 14:50:55 PAGE 2   

  55                          CPU = 0;
  56                  } else if(Flush_CNT == 3){
  57                          CPU = 1;
  58                  }
  59          }
  60          */
  61          //--------------------------------------------------------------------------
  62          void LED_OnOff(char Ch, char Da)
  63          {
  64   1              if(Ch == 1){
  65   2                      if(Da == 1) LED1 = 0; else LED1 = 1;
  66   2              }
  67   1              if(Ch == 2){
  68   2                      if(Da == 1) LED2 = 0; else LED2 = 1;
  69   2              }
  70   1      }
  71          //--------------------------------------------------------------------------
  72          void IO_InOut(unsigned char Da)
  73          {
  74   1              if(Da&0x01) P1_MC = 1; else P1_MC = 0;
  75   1              if(Da&0x02) P2_MC = 1; else P2_MC = 0;
  76   1              if(Da&0x04) P3_MC = 1; else P3_MC = 0;
  77   1              if(Da&0x08) P4_MC = 1; else P4_MC = 0;
  78   1              if(Da&0x10) P5_MC = 1; else P5_MC = 0;
  79   1              if(Da&0x20) P6_MC = 1; else P6_MC = 0;
  80   1      }
  81          //--------------------------------------------------------------------------
  82          void RF_Set(unsigned char Da)
  83          {
  84   1              if(Da&0x01) RF_CH1  = 1; else RF_CH1  = 0;
  85   1              if(Da&0x02) RF_CH2  = 1; else RF_CH2  = 0;
  86   1              if(Da&0x04) RF_B1B2 = 1; else RF_B1B2 = 0;
  87   1              if(Da&0x08) RF_OPT  = 1; else RF_OPT  = 0;      // High
  88   1              if(Da&0x10) RF_WUT  = 1; else RF_WUT  = 0;      // High
  89   1              if(Da&0x80) RF_REI  = 1; else RF_REI  = 0;
  90   1      }
  91          //--------------------------------------------------------------------------
  92          /*
  93          void RF_Out(unsigned char Ch, unsigned char Da)
  94          {
  95                  unsigned char i = 0, j = 0, k = 0;
  96                  unsigned char Buf[15] = {0};
  97                  //---
  98                  k = 0;
  99                  for(i = 0; i < 8; i++){
 100                          Buf[k++] = RF_oST[i];
 101                  }
 102                  //---
 103                  Buf[k++] = Ch + 0x30;
 104                  //---
 105                  for(i = 0; i < 5; i++){
 106                          if(Da == 2) Buf[k++] = RF_oE2[i];       // Off
 107                          else          Buf[k++] = RF_oE1[i];     // On
 108                  }
 109                  Send_Tx1(Buf, k);
 110          }
 111          */
 112          //--------------------------------------------------------------------------
 113          void IO_Map_Init(void)
 114          {
 115   1              PUCON0 = 0x40;
 116   1              P1M0 |= 0xC0;
C51 COMPILER V9.59.0.0   SETDRV                                                            09/25/2019 14:50:55 PAGE 3   

 117   1              P2M0 |= 0x5C;
 118   1              SFRPI = 0x01;
 119   1              P6M0 |= 0x03;
 120   1              SFRPI = 0x00;
 121   1      }
 122          //--------------------------------------------------------------------------
 123          void WDT_INIT(void)
 124          {
 125   1              PCON1 |= WDTF;                                                          // Clear WDT flag (write “1”)
 126   1              WDTCR = (WREN | NSW | CLW | PS2 | PS1| PS0);    // set WDT period to 248ms
 127   1              WDTCR |= ENW;                                                           // Enable WDT counter, WDT running.
 128   1      }
 129          //--------------------------------------------------------------------------
 130          // End of File


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    229    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      2    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
